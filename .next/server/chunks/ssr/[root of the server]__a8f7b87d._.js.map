{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Abel/Documents/Code/Undergraduate%20Final%20Project/reroute/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  throw new Error(\"Missing Supabase environment variables\");\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\nexport async function getStopsByRoute(routeId: string, direction: number = 0) {\r\n  if (!routeId) {\r\n    console.error(\"Route ID is required.\");\r\n    return [];\r\n  }\r\n\r\n  let { data, error } = await supabase\r\n    .rpc('get', { \r\n      route_num: routeId, \r\n      direction_num: direction \r\n    });\r\n\r\n  if (error) {\r\n    console.error('Error fetching stops:', error.message, error.details, error.code);\r\n    return [];\r\n  }\r\n\r\n  if (!data) return [];\r\n\r\n  return data.map((record: {\r\n    stop_id: string;\r\n    route_stop_order: number;\r\n    stop_name: string;\r\n    stop_lat: number;\r\n    stop_lon: number;\r\n  }) => ({\r\n    stop_id: record.stop_id,\r\n    route_stop_order: record.route_stop_order,\r\n    stop_name: record.stop_name,\r\n    stop_lat: record.stop_lat,\r\n    stop_lon: record.stop_lon\r\n  }));\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEN,uCAAsC;;AAEtC;AAEO,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAC3C,eAAe,gBAAgB,OAAe,EAAE,YAAoB,CAAC;IAC1E,IAAI,CAAC,SAAS;QACZ,QAAQ,KAAK,CAAC;QACd,OAAO,EAAE;IACX;IAEA,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SACzB,GAAG,CAAC,OAAO;QACV,WAAW;QACX,eAAe;IACjB;IAEF,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,yBAAyB,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,IAAI;QAC/E,OAAO,EAAE;IACX;IAEA,IAAI,CAAC,MAAM,OAAO,EAAE;IAEpB,OAAO,KAAK,GAAG,CAAC,CAAC,SAMX,CAAC;YACL,SAAS,OAAO,OAAO;YACvB,kBAAkB,OAAO,gBAAgB;YACzC,WAAW,OAAO,SAAS;YAC3B,UAAU,OAAO,QAAQ;YACzB,UAAU,OAAO,QAAQ;QAC3B,CAAC;AACH","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Abel/Documents/Code/Undergraduate%20Final%20Project/reroute/src/components/routemap.tsx"],"sourcesContent":["import React from 'react';\r\nimport { GoogleMap, Marker, Polyline, InfoWindow } from \"@react-google-maps/api\";\r\nimport { Route, Stop, Vehicle } from '@/types/route';\r\n\r\ninterface RouteMapProps {\r\n  route: Route;\r\n  mapCenter: { lat: number; lng: number };\r\n  routePath: google.maps.LatLngLiteral[];\r\n  activeDirection: number;\r\n  stopsDirection0: Stop[];\r\n  stopsDirection1: Stop[];\r\n  vehicles: Vehicle[];\r\n  selectedStop: Stop | null;\r\n  selectedVehicle: Vehicle | null;\r\n  onMapLoad: (map: google.maps.Map) => void;\r\n  onStopSelect: (stop: Stop) => void;\r\n  onVehicleSelect: (vehicle: Vehicle) => void;\r\n  onStopClose: () => void;\r\n  onVehicleClose: () => void;\r\n}\r\n\r\nconst RouteMap: React.FC<RouteMapProps> = ({\r\n  route,\r\n  mapCenter,\r\n  routePath,\r\n  activeDirection,\r\n  stopsDirection0,\r\n  stopsDirection1,\r\n  vehicles,\r\n  selectedStop,\r\n  selectedVehicle,\r\n  onMapLoad,\r\n  onStopSelect,\r\n  onVehicleSelect,\r\n  onStopClose,\r\n  onVehicleClose,\r\n}) => {\r\n  // Map styles\r\n  const mapStyles = [\r\n    { \"elementType\": \"geometry\", \"stylers\": [{ \"color\": \"#242f3e\" }] },\r\n    { \"elementType\": \"labels.text.stroke\", \"stylers\": [{ \"lightness\": -80 }] },\r\n    { \"featureType\": \"administrative.locality\", \"elementType\": \"labels.text.fill\", \"stylers\": [{ \"color\": \"#746855\" }] },\r\n    { \"featureType\": \"poi\", \"elementType\": \"labels.text.fill\", \"stylers\": [{ \"color\": \"#d59563\" }] },\r\n    { \"featureType\": \"poi.park\", \"elementType\": \"geometry\", \"stylers\": [{ \"color\": \"#263c3f\" }] },\r\n    { \"featureType\": \"poi.park\", \"elementType\": \"labels.text.fill\", \"stylers\": [{ \"color\": \"#6b9a76\" }] },\r\n    { \"featureType\": \"road\", \"elementType\": \"geometry\", \"stylers\": [{ \"color\": \"#38414e\" }] },\r\n    { \"featureType\": \"road\", \"elementType\": \"geometry.stroke\", \"stylers\": [{ \"color\": \"#212a37\" }] },\r\n    { \"featureType\": \"road\", \"elementType\": \"labels.text.fill\", \"stylers\": [{ \"color\": \"#9ca5b3\" }] },\r\n    { \"featureType\": \"road.highway\", \"elementType\": \"geometry\", \"stylers\": [{ \"color\": \"#746855\" }] },\r\n    { \"featureType\": \"road.highway\", \"elementType\": \"geometry.stroke\", \"stylers\": [{ \"color\": \"#1f2835\" }] },\r\n    { \"featureType\": \"road.highway\", \"elementType\": \"labels.text.fill\", \"stylers\": [{ \"color\": \"#f3d19c\" }] },\r\n    { \"featureType\": \"transit\", \"elementType\": \"geometry\", \"stylers\": [{ \"color\": \"#2f3948\" }] },\r\n    { \"featureType\": \"transit.station\", \"elementType\": \"labels.text.fill\", \"stylers\": [{ \"color\": \"#d59563\" }] },\r\n    { \"featureType\": \"water\", \"elementType\": \"geometry\", \"stylers\": [{ \"color\": \"#17263c\" }] },\r\n    { \"featureType\": \"water\", \"elementType\": \"labels.text.fill\", \"stylers\": [{ \"color\": \"#515c6d\" }] },\r\n    { \"featureType\": \"water\", \"elementType\": \"labels.text.stroke\", \"stylers\": [{ \"lightness\": -20 }] }\r\n  ];\r\n\r\n  // Map options\r\n  const mapOptions = {\r\n    fullscreenControl: false,\r\n    streetViewControl: false,\r\n    mapTypeControl: false,\r\n    zoomControl: true,\r\n    gestureHandling: \"greedy\",\r\n    styles: mapStyles,\r\n  };\r\n\r\n  // Get route color\r\n  const routeColor = route?.route_color ? `#${route.route_color}` : \"#4285F4\";\r\n\r\n  // Create stop marker icon\r\n  const createStopIcon = () => ({\r\n    path: google.maps.SymbolPath.CIRCLE,\r\n    scale: 8,\r\n    fillColor: routeColor,\r\n    fillOpacity: 0.8,\r\n    strokeColor: \"#FFFFFF\",\r\n    strokeWeight: 2,\r\n  });\r\n\r\n  // Create vehicle marker icon\r\n  const createVehicleIcon = () => ({\r\n    path: google.maps.SymbolPath.CIRCLE,\r\n    scale: 10,\r\n    fillColor: \"#FF0000\", // Red for vehicles\r\n    fillOpacity: 0.9,\r\n    strokeColor: \"#FFFFFF\",\r\n    strokeWeight: 2,\r\n  });\r\n\r\n  // Get current stops based on active direction\r\n  const currentStops = activeDirection === 0 ? stopsDirection0 : stopsDirection1;\r\n\r\n  return (\r\n    <div style={{ flex: 1, borderRadius: \"10px\", overflow: \"hidden\" }}>\r\n      <GoogleMap\r\n        zoom={14}\r\n        center={mapCenter}\r\n        mapContainerStyle={{ height: \"100%\", width: \"100%\" }}\r\n        options={mapOptions}\r\n        onLoad={onMapLoad}\r\n      >\r\n        {/* Draw route path */}\r\n        {routePath.length > 0 && (\r\n          <Polyline\r\n            path={routePath}\r\n            options={{\r\n              strokeColor: routeColor,\r\n              strokeOpacity: 0.8,\r\n              strokeWeight: 4,\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {/* Add markers for stops based on active direction */}\r\n        {currentStops.map((stop) => (\r\n          <Marker\r\n            key={stop.stop_id}\r\n            position={{\r\n              lat: parseFloat(stop.stop_lat),\r\n              lng: parseFloat(stop.stop_lon)\r\n            }}\r\n            title={stop.stop_name}\r\n            onClick={() => onStopSelect(stop)}\r\n            icon={createStopIcon()}\r\n          />\r\n        ))}\r\n\r\n        {/* Add markers for live vehicles */}\r\n        {vehicles.map((vehicle) => (\r\n          <Marker\r\n            key={vehicle.vehicle_id}\r\n            position={{\r\n              lat: vehicle.latitude,\r\n              lng: vehicle.longitude\r\n            }}\r\n            title={`Vehicle ${vehicle.vehicle_id}`}\r\n            onClick={() => onVehicleSelect(vehicle)}\r\n            icon={createVehicleIcon()}\r\n          />\r\n        ))}\r\n\r\n        {/* Show InfoWindow when a stop is selected */}\r\n        {selectedStop && (\r\n          <InfoWindow\r\n            position={{\r\n              lat: parseFloat(selectedStop.stop_lat),\r\n              lng: parseFloat(selectedStop.stop_lon)\r\n            }}\r\n            onCloseClick={onStopClose}\r\n          >\r\n            <div style={{ padding: \"8px\" }}>\r\n              <h3 style={{ margin: \"0 0 4px 0\", fontSize: \"14px\", fontWeight: \"bold\", color: \"black\" }}>{selectedStop.stop_name}</h3>\r\n              <p style={{ margin: \"0\", fontSize: \"12px\", color: \"#666\" }}>Stop ID: {selectedStop.stop_id}</p>\r\n            </div>\r\n          </InfoWindow>\r\n        )}\r\n\r\n        {/* Show InfoWindow when a vehicle is selected */}\r\n        {selectedVehicle && (\r\n          <InfoWindow\r\n            position={{\r\n              lat: selectedVehicle.latitude,\r\n              lng: selectedVehicle.longitude\r\n            }}\r\n            onCloseClick={onVehicleClose}\r\n          >\r\n            <div style={{ padding: \"8px\" }}>\r\n              <h3 style={{ margin: \"0 0 4px 0\", fontSize: \"14px\", fontWeight: \"bold\", color: \"#000000\" }}>Vehicle {selectedVehicle.vehicle_id}</h3>\r\n              <p style={{ margin: \"0\", fontSize: \"12px\", color: \"#666\" }}>Route: {selectedVehicle.route_id}</p>\r\n              <p style={{ margin: \"0\", fontSize: \"12px\", color: \"#666\" }}>Status: {selectedVehicle.current_status || 'N/A'}</p>\r\n              <p style={{ margin: \"0\", fontSize: \"12px\", color: \"#666\" }}>Speed: {selectedVehicle.speed ? `${selectedVehicle.speed} mph` : 'N/A'}</p>\r\n              <p style={{ margin: \"0\", fontSize: \"12px\", color: \"#666\" }}>Updated: {selectedVehicle.timestamp || 'N/A'}</p>\r\n            </div>\r\n          </InfoWindow>\r\n        )}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RouteMap; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 535, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 541, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Abel/Documents/Code/Undergraduate%20Final%20Project/reroute/src/components/stops.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Stop } from '@/types/route';\r\n\r\ninterface StopsListProps {\r\n  activeDirection: number;\r\n  stopsDirection0: Stop[];\r\n  stopsDirection1: Stop[];\r\n  onStopSelect: (stop: Stop) => void;\r\n  onDirectionChange: (direction: number) => void;\r\n}\r\n\r\nconst StopsList: React.FC<StopsListProps> = ({\r\n  activeDirection,\r\n  stopsDirection0,\r\n  stopsDirection1,\r\n  onStopSelect,\r\n  onDirectionChange,\r\n}) => {\r\n  // Common styles\r\n  const containerStyle = { \r\n    background: \"linear-gradient(to right, #1e3c72, #2a5298)\", \r\n    padding: \"24px\", \r\n    borderRadius: \"10px\",\r\n    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n    flex: \"1\",\r\n    overflowY: \"auto\"\r\n  };\r\n\r\n  const directionButtonStyle = (isActive: boolean) => ({\r\n    flex: 1,\r\n    padding: \"8px 16px\",\r\n    background: isActive ? \"#2563eb\" : \"rgba(255, 255, 255, 0.1)\",\r\n    border: \"none\",\r\n    borderRadius: \"6px\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"bold\",\r\n    transition: \"background 0.2s\"\r\n  });\r\n\r\n  const stopItemStyle = { \r\n    background: \"#1e3c72\",\r\n    padding: \"16px\",\r\n    borderRadius: \"10px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\"\r\n  };\r\n\r\n  const stopNumberStyle = { \r\n    background: \"#2a5298\",\r\n    color: \"white\",\r\n    width: \"32px\",\r\n    height: \"32px\",\r\n    borderRadius: \"50%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginRight: \"16px\"\r\n  };\r\n\r\n  // Render a single stop item\r\n  const renderStopItem = (stop: Stop, index: number) => (\r\n    <div \r\n      key={stop.stop_id} \r\n      style={stopItemStyle}\r\n      onClick={() => onStopSelect(stop)}\r\n    >\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <span style={stopNumberStyle}>{index + 1}</span>\r\n        <div>\r\n          <h3 style={{ fontWeight: \"bold\", color: \"white\" }}>{stop.stop_name}</h3>\r\n          <p style={{ fontSize: \"14px\", color: \"#93c5fd\" }}>Stop ID: {stop.stop_id}</p>\r\n        </div>\r\n      </div>\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <p style={{ color: stop.arrivalTime ? \"#4ade80\" : \"#93c5fd\" }}>\r\n          {stop.arrivalTime ? `Arrives: ${stop.arrivalTime}` : \"No arrival time available\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Get the current stops based on active direction\r\n  const currentStops = activeDirection === 0 ? stopsDirection0 : stopsDirection1;\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <h2 style={{ fontSize: \"20px\", fontWeight: \"bold\", marginBottom: \"16px\" }}>Stops on this Route</h2>\r\n      \r\n      {/* Direction selector */}\r\n      <div style={{ \r\n        display: \"flex\", \r\n        gap: \"16px\", \r\n        marginBottom: \"24px\",\r\n        background: \"rgba(255, 255, 255, 0.1)\",\r\n        padding: \"12px\",\r\n        borderRadius: \"8px\"\r\n      }}>\r\n        <button\r\n          onClick={() => onDirectionChange(0)}\r\n          style={directionButtonStyle(activeDirection === 0)}\r\n        >\r\n          Direction 1\r\n        </button>\r\n        <button\r\n          onClick={() => onDirectionChange(1)}\r\n          style={directionButtonStyle(activeDirection === 1)}\r\n        >\r\n          Direction 2\r\n        </button>\r\n      </div>\r\n      \r\n      {currentStops.length === 0 ? (\r\n        <p style={{ color: \"#93c5fd\" }}>No stops information available for this direction.</p>\r\n      ) : (\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\r\n          {currentStops.map((stop, index) => renderStopItem(stop, index))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StopsList; "],"names":[],"mappings":";;;;;AAWA,MAAM,YAAsC,CAAC,EAC3C,eAAe,EACf,eAAe,EACf,eAAe,EACf,YAAY,EACZ,iBAAiB,EAClB;IACC,gBAAgB;IAChB,MAAM,iBAAiB;QACrB,YAAY;QACZ,SAAS;QACT,cAAc;QACd,WAAW;QACX,MAAM;QACN,WAAW;IACb;IAEA,MAAM,uBAAuB,CAAC,WAAsB,CAAC;YACnD,MAAM;YACN,SAAS;YACT,YAAY,WAAW,YAAY;YACnC,QAAQ;YACR,cAAc;YACd,OAAO;YACP,QAAQ;YACR,UAAU;YACV,YAAY;YACZ,YAAY;QACd,CAAC;IAED,MAAM,gBAAgB;QACpB,YAAY;QACZ,SAAS;QACT,cAAc;QACd,SAAS;QACT,gBAAgB;QAChB,YAAY;QACZ,QAAQ;QACR,WAAW;IACb;IAEA,MAAM,kBAAkB;QACtB,YAAY;QACZ,OAAO;QACP,OAAO;QACP,QAAQ;QACR,cAAc;QACd,SAAS;QACT,YAAY;QACZ,gBAAgB;QAChB,aAAa;IACf;IAEA,4BAA4B;IAC5B,MAAM,iBAAiB,CAAC,MAAY,sBAClC,8OAAC;YAEC,OAAO;YACP,SAAS,IAAM,aAAa;;8BAE5B,8OAAC;oBAAI,OAAO;wBAAE,SAAS;wBAAQ,YAAY;oBAAS;;sCAClD,8OAAC;4BAAK,OAAO;sCAAkB,QAAQ;;;;;;sCACvC,8OAAC;;8CACC,8OAAC;oCAAG,OAAO;wCAAE,YAAY;wCAAQ,OAAO;oCAAQ;8CAAI,KAAK,SAAS;;;;;;8CAClE,8OAAC;oCAAE,OAAO;wCAAE,UAAU;wCAAQ,OAAO;oCAAU;;wCAAG;wCAAU,KAAK,OAAO;;;;;;;;;;;;;;;;;;;8BAG5E,8OAAC;oBAAI,OAAO;wBAAE,WAAW;oBAAQ;8BAC/B,cAAA,8OAAC;wBAAE,OAAO;4BAAE,OAAO,KAAK,WAAW,GAAG,YAAY;wBAAU;kCACzD,KAAK,WAAW,GAAG,CAAC,SAAS,EAAE,KAAK,WAAW,EAAE,GAAG;;;;;;;;;;;;WAbpD,KAAK,OAAO;;;;;IAmBrB,kDAAkD;IAClD,MAAM,eAAe,oBAAoB,IAAI,kBAAkB;IAE/D,qBACE,8OAAC;QAAI,OAAO;;0BACV,8OAAC;gBAAG,OAAO;oBAAE,UAAU;oBAAQ,YAAY;oBAAQ,cAAc;gBAAO;0BAAG;;;;;;0BAG3E,8OAAC;gBAAI,OAAO;oBACV,SAAS;oBACT,KAAK;oBACL,cAAc;oBACd,YAAY;oBACZ,SAAS;oBACT,cAAc;gBAChB;;kCACE,8OAAC;wBACC,SAAS,IAAM,kBAAkB;wBACjC,OAAO,qBAAqB,oBAAoB;kCACjD;;;;;;kCAGD,8OAAC;wBACC,SAAS,IAAM,kBAAkB;wBACjC,OAAO,qBAAqB,oBAAoB;kCACjD;;;;;;;;;;;;YAKF,aAAa,MAAM,KAAK,kBACvB,8OAAC;gBAAE,OAAO;oBAAE,OAAO;gBAAU;0BAAG;;;;;qCAEhC,8OAAC;gBAAI,OAAO;oBAAE,SAAS;oBAAQ,eAAe;oBAAU,KAAK;gBAAO;0BACjE,aAAa,GAAG,CAAC,CAAC,MAAM,QAAU,eAAe,MAAM;;;;;;;;;;;;AAKlE;uCAEe","debugId":null}},
    {"offset": {"line": 752, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 758, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Abel/Documents/Code/Undergraduate%20Final%20Project/reroute/src/app/route/%5Brouteid%5D/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useParams, useRouter } from \"next/navigation\";\nimport Link from \"next/link\";\nimport { useJsApiLoader } from \"@react-google-maps/api\";\nimport { getStopsByRoute } from '@/lib/supabase';\nimport { Route, Stop, Vehicle } from '@/types/route';\nimport RouteMap from '@/components/routemap';\nimport StopsList from '@/components/stops';\nimport VehiclesList from '@/components/vehicles';\n\nconst RoutePage = () => {\n  const params = useParams();\n  const router = useRouter();\n  const routeId = params?.routeid as string;\n  \n  const [route, setRoute] = useState<Route | null>(null);\n  const [stops, setStops] = useState<Stop[]>([]);\n  const [stopsDirection0, setStopsDirection0] = useState<Stop[]>([]);\n  const [stopsDirection1, setStopsDirection1] = useState<Stop[]>([]);\n  const [activeDirection, setActiveDirection] = useState<number>(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [mapCenter, setMapCenter] = useState({ lat: 33.878840, lng: -117.884973 }); // Default center\n  const [routePath, setRoutePath] = useState<google.maps.LatLngLiteral[]>([]);\n  const mapRef = useRef<google.maps.Map | null>(null);\n  const [selectedStop, setSelectedStop] = useState<Stop | null>(null);\n  \n  // Add state for live vehicles\n  const [vehicles, setVehicles] = useState<Vehicle[]>([]);\n  const [selectedVehicle, setSelectedVehicle] = useState<Vehicle | null>(null);\n  const [lastUpdated, setLastUpdated] = useState<string>(\"Never\");\n\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY!,\n    libraries: [\"places\", \"maps\"],\n  });\n\n  // Function to fetch live vehicle positions\n  const fetchVehiclePositions = async () => {\n    try {\n      // Fetch from the Flask API directly\n      const response = await fetch(`http://127.0.0.1:5000/api/vehicle-positions/${routeId}`);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch vehicle data: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      // Filter vehicles to only include those for the current route\n      const routeVehicles = data.vehicles || [];\n      setVehicles(routeVehicles);\n      \n      // Update last updated timestamp\n      const now = new Date();\n      setLastUpdated(now.toLocaleTimeString());\n      \n      console.log(`Updated ${routeVehicles.length} vehicles for route ${routeId}`);\n    } catch (err) {\n      console.error('Error fetching vehicle positions:', err);\n      // Don't set error state here to avoid disrupting the UI\n    }\n  };\n\n  useEffect(() => {\n    const fetchRouteData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Fetch route details from Transit.land API\n        const apiKey = process.env.NEXT_PUBLIC_TRANSIT_LAND_API_KEY || '4i0HhaRLe0jBSotDmxETH05X2iwrgNcJ';\n        const response = await fetch(\n          `https://transit.land/api/v2/rest/routes/r-9qh0-${routeId}?api_key=${apiKey}`\n        );\n\n        if (!response.ok) {\n          throw new Error(`Failed to fetch route details: ${response.status} ${response.statusText}`);\n        }\n\n        const data = await response.json();\n        console.log('Route data:', data);\n\n        if (data.routes && data.routes.length > 0) {\n          const routeData = data.routes[0];\n          setRoute(routeData);\n\n          // Extract route path coordinates\n          if (routeData.geometry && routeData.geometry.coordinates) {\n            const path = routeData.geometry.coordinates[0].map((coord: number[]) => ({\n              lat: coord[1],\n              lng: coord[0]\n            }));\n            setRoutePath(path);\n\n            // Set map center to the first coordinate\n            if (path.length > 0) {\n              setMapCenter(path[0]);\n            }\n          }\n\n          // Process route_stops from the API response\n          if (routeData.route_stops && routeData.route_stops.length > 0) {\n            // Get stops from Supabase for both directions\n            const stopsDirection0Response = await getStopsByRoute(routeId, 0);\n            const stopsDirection1Response = await getStopsByRoute(routeId, 1);\n            \n            // Create maps of Supabase stops by stop_id for quick lookup\n            const supabaseStopsDirection0 = new Map(\n              stopsDirection0Response.map((stop: Stop) => [stop.stop_id, stop])\n            );\n            const supabaseStopsDirection1 = new Map(\n              stopsDirection1Response.map((stop: Stop) => [stop.stop_id, stop])\n            );\n            \n            // Process Transit.land stops and match with Supabase stops\n            const processedStopsDirection0: Stop[] = [];\n            const processedStopsDirection1: Stop[] = [];\n            \n            // Process each stop from Transit.land\n            routeData.route_stops.forEach((routeStop: any, index: number) => {\n              const stop = routeStop.stop;\n              const stopId = stop.stop_id;\n              \n              // Create a processed stop object\n              const processedStop = {\n                stop_id: stopId,\n                stop_name: stop.stop_name,\n                stop_lat: stop.geometry.coordinates[1].toString(),\n                stop_lon: stop.geometry.coordinates[0].toString()\n              };\n              \n              // Check if this stop exists in Supabase for direction 0\n              if (supabaseStopsDirection0.has(stopId)) {\n                processedStopsDirection0.push(processedStop);\n              }\n              \n              // Check if this stop exists in Supabase for direction 1\n              if (supabaseStopsDirection1.has(stopId)) {\n                processedStopsDirection1.push(processedStop);\n              }\n            });\n            \n            // Set the stops for each direction\n            setStopsDirection0(processedStopsDirection0);\n            setStopsDirection1(processedStopsDirection1);\n            \n            // Set all stops for backward compatibility\n            setStops([...processedStopsDirection0, ...processedStopsDirection1]);\n          } else {\n            // Fallback to Supabase if no route_stops in API response\n            // Fetch stops for both directions\n            const stopsDirection0Response = await getStopsByRoute(routeId, 0);\n            const stopsDirection1Response = await getStopsByRoute(routeId, 1);\n            \n            setStopsDirection0(stopsDirection0Response);\n            setStopsDirection1(stopsDirection1Response);\n            \n            // Set all stops for backward compatibility\n            setStops([...stopsDirection0Response, ...stopsDirection1Response]);\n          }\n        } else {\n          throw new Error('Route not found');\n        }\n      } catch (err) {\n        console.error('Error fetching route details:', err);\n        setError(err instanceof Error ? err.message : 'Failed to fetch route details');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRouteData();\n  }, [routeId]);\n\n  // Set up polling for vehicle positions\n  useEffect(() => {\n    // Initial fetch\n    fetchVehiclePositions();\n    \n    // Set up polling every 10 seconds\n    const intervalId = setInterval(fetchVehiclePositions, 10000);\n    \n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, [routeId]);\n\n  const handleMapLoad = (map: google.maps.Map) => {\n    mapRef.current = map;\n  };\n\n  if (!isLoaded) {\n    return (\n      <div style={{ \n        minHeight: \"100vh\", \n        background: \"linear-gradient(to right, #1e3c72, #2a5298)\", \n        color: \"white\", \n        padding: \"32px\" \n      }}>\n        <div style={{ maxWidth: \"1024px\", margin: \"0 auto\" }}>\n          <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"32px\" }}>\n            <Link href=\"/map\" style={{ marginRight: \"16px\", color: \"#93c5fd\", textDecoration: \"none\" }}>\n              ← Back to Map\n            </Link>\n            <h1 style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>Loading map...</h1>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div style={{ \n        minHeight: \"100vh\", \n        background: \"linear-gradient(to right, #1e3c72, #2a5298)\", \n        color: \"white\", \n        padding: \"32px\" \n      }}>\n        <div style={{ maxWidth: \"1024px\", margin: \"0 auto\" }}>\n          <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"32px\" }}>\n            <Link href=\"/map\" style={{ marginRight: \"16px\", color: \"#93c5fd\", textDecoration: \"none\" }}>\n              ← Back to Map\n            </Link>\n            <h1 style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>Loading route details...</h1>\n          </div>\n          <div style={{ animation: \"pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite\" }}>\n            <div style={{ height: \"32px\", background: \"#1e3c72\", borderRadius: \"6px\", width: \"33%\", marginBottom: \"16px\" }}></div>\n            <div style={{ height: \"16px\", background: \"#1e3c72\", borderRadius: \"6px\", width: \"66%\", marginBottom: \"8px\" }}></div>\n            <div style={{ height: \"16px\", background: \"#1e3c72\", borderRadius: \"6px\", width: \"50%\", marginBottom: \"32px\" }}></div>\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\n              {[1, 2, 3, 4, 5].map((i) => (\n                <div key={i} style={{ height: \"64px\", background: \"#1e3c72\", borderRadius: \"6px\" }}></div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div style={{ \n        minHeight: \"100vh\", \n        background: \"linear-gradient(to right, #1e3c72, #2a5298)\", \n        color: \"white\", \n        padding: \"32px\" \n      }}>\n        <div style={{ maxWidth: \"1024px\", margin: \"0 auto\" }}>\n          <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"32px\" }}>\n            <Link href=\"/map\" style={{ marginRight: \"16px\", color: \"#93c5fd\", textDecoration: \"none\" }}>\n              ← Back to Map\n            </Link>\n            <h1 style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>Error</h1>\n          </div>\n          <div style={{ background: \"rgba(220, 38, 38, 0.5)\", padding: \"24px\", borderRadius: \"10px\" }}>\n            <p style={{ fontSize: \"20px\", marginBottom: \"16px\" }}>Failed to load route details</p>\n            <p style={{ color: \"#fca5a5\" }}>{error}</p>\n            <button \n              onClick={() => router.push('/map')}\n              style={{ \n                marginTop: \"24px\",\n                padding: \"8px 16px\",\n                background: \"#2563eb\",\n                borderRadius: \"6px\",\n                border: \"none\",\n                color: \"white\",\n                cursor: \"pointer\",\n                transition: \"background 0.2s\"\n              }}\n              onMouseOver={(e) => {\n                e.currentTarget.style.background = \"#1d4ed8\";\n              }}\n              onMouseOut={(e) => {\n                e.currentTarget.style.background = \"#2563eb\";\n              }}\n            >\n              Return to Map\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!route) {\n    return (\n      <div style={{ \n        minHeight: \"100vh\", \n        background: \"linear-gradient(to right, #1e3c72, #2a5298)\", \n        color: \"white\", \n        padding: \"32px\" \n      }}>\n        <div style={{ maxWidth: \"1024px\", margin: \"0 auto\" }}>\n          <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"32px\" }}>\n            <Link href=\"/map\" style={{ marginRight: \"16px\", color: \"#93c5fd\", textDecoration: \"none\" }}>\n              ← Back to Map\n            </Link>\n            <h1 style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>Route Not Found</h1>\n          </div>\n          <div style={{ background: \"rgba(30, 58, 138, 0.5)\", padding: \"24px\", borderRadius: \"10px\" }}>\n            <p style={{ fontSize: \"20px\", marginBottom: \"16px\" }}>The requested route could not be found</p>\n            <button \n              onClick={() => router.push('/map')}\n              style={{ \n                marginTop: \"24px\",\n                padding: \"8px 16px\",\n                background: \"#2563eb\",\n                borderRadius: \"6px\",\n                border: \"none\",\n                color: \"white\",\n                cursor: \"pointer\",\n                transition: \"background 0.2s\"\n              }}\n              onMouseOver={(e) => {\n                e.currentTarget.style.background = \"#1d4ed8\";\n              }}\n              onMouseOut={(e) => {\n                e.currentTarget.style.background = \"#2563eb\";\n              }}\n            >\n              Return to Map\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ \n      minHeight: \"100vh\", \n      background: \"linear-gradient(to right, #1e3c72, #2a5298)\", \n      color: \"white\", \n      padding: \"32px\" \n    }}>\n      <div style={{ maxWidth: \"1400px\", margin: \"0 auto\" }}>\n        <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"32px\" }}>\n          <Link href=\"/map\" style={{ marginRight: \"16px\", color: \"#93c5fd\", textDecoration: \"none\" }}>\n            ← Back to Map\n          </Link>\n          <h1 style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>OCTA BUS {route.route_id}</h1>\n        </div>\n\n        {/* Side-by-side layout */}\n        <div style={{ display: \"flex\", gap: \"32px\" }}>\n          {/* Map Section - Left Side */}\n          <div style={{ \n            flex: \"2\",\n            height: \"calc(100vh - 150px)\", \n            borderRadius: \"10px\", \n            overflow: \"hidden\", \n            boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\n            display: \"flex\",\n            flexDirection: \"column\"\n          }}>\n            <RouteMap\n              route={route}\n              mapCenter={mapCenter}\n              routePath={routePath}\n              activeDirection={activeDirection}\n              stopsDirection0={stopsDirection0}\n              stopsDirection1={stopsDirection1}\n              vehicles={vehicles}\n              selectedStop={selectedStop}\n              selectedVehicle={selectedVehicle}\n              onMapLoad={handleMapLoad}\n              onStopSelect={setSelectedStop}\n              onVehicleSelect={setSelectedVehicle}\n              onStopClose={() => setSelectedStop(null)}\n              onVehicleClose={() => setSelectedVehicle(null)}\n            />\n            \n            {/* Live vehicle status bar */}\n            <div style={{ \n              background: \"rgba(0, 0, 0, 0.7)\", \n              padding: \"8px 16px\", \n              display: \"flex\", \n              justifyContent: \"space-between\", \n              alignItems: \"center\",\n              borderBottomLeftRadius: \"10px\",\n              borderBottomRightRadius: \"10px\"\n            }}>\n              <div>\n                <span style={{ color: \"#FF0000\", marginRight: \"8px\" }}>●</span>\n                <span>Live Vehicles: {vehicles.length}</span>\n              </div>\n              <div>\n                <span>Last Updated: {lastUpdated}</span>\n                <button \n                  onClick={fetchVehiclePositions}\n                  style={{ \n                    marginLeft: \"16px\",\n                    padding: \"4px 8px\",\n                    background: \"rgba(255, 255, 255, 0.1)\",\n                    border: \"none\",\n                    borderRadius: \"4px\",\n                    color: \"white\",\n                    cursor: \"pointer\"\n                  }}\n                >\n                  Refresh\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Route Details Section - Right Side */}\n          <div style={{ flex: \"1\", display: \"flex\", flexDirection: \"column\", gap: \"32px\", overflowY: \"auto\", maxHeight: \"calc(100vh - 150px)\" }}>\n            <div style={{ \n              background: \"linear-gradient(to right, #1e3c72, #2a5298)\", \n              padding: \"24px\", \n              borderRadius: \"10px\", \n              boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\"\n            }}>\n              <div style={{\n                padding: \"20px\",\n                background: \"rgba(30, 60, 114, 0.95)\",\n                borderRadius: \"8px\",\n                boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\"\n              }}>\n                <h2 style={{ fontSize: \"20px\", fontWeight: \"bold\", marginBottom: \"8px\" }}>{route.route_long_name}</h2>\n                <p style={{ color: \"#93c5fd\", marginBottom: \"16px\" }}>Route ID: {route.route_id}</p>\n                {route.route_desc && (\n                  <p style={{ marginBottom: \"16px\" }}>{route.route_desc}</p>\n                )}\n              </div>\n            </div>\n\n            {/* Live Vehicles Section */}\n            <VehiclesList\n              vehicles={vehicles}\n              onVehicleSelect={setSelectedVehicle}\n              onRefresh={fetchVehiclePositions}\n            />\n\n            {/* Stops List Section */}\n            <StopsList\n              activeDirection={activeDirection}\n              stopsDirection0={stopsDirection0}\n              stopsDirection1={stopsDirection1}\n              onStopSelect={setSelectedStop}\n              onDirectionChange={setActiveDirection}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RoutePage;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1676, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}