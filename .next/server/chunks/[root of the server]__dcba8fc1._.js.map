{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Abel/Documents/Code/Undergraduate%20Final%20Project/reroute/src/app/route/api/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\n\r\nexport async function GET(request: Request) {\r\n  try {\r\n    // Get latitude and longitude from the URL\r\n    const { searchParams } = new URL(request.url);\r\n    const lat = searchParams.get('lat') || '33.8461618';\r\n    const lon = searchParams.get('lon') || '-118.011091';\r\n    \r\n    // Transit.land API key\r\n    const apiKey = '4i0HhaRLe0jBSotDmxETH05X2iwrgNcJ';\r\n    \r\n    // Fetch data from Transit.land API\r\n    const response = await fetch(\r\n      `https://transit.land/api/v2/rest/routes?lat=${lat}&lon=${lon}&radius=1000&api_key=${apiKey}`,\r\n      {\r\n        headers: {\r\n          'Accept': 'application/json',\r\n        },\r\n        next: { revalidate: 60 }, // Cache for 60 seconds\r\n      }\r\n    );\r\n    \r\n    if (!response.ok) {\r\n      console.error(`Transit.land API error: ${response.status}`);\r\n      return NextResponse.json({ \r\n        error: `Transit.land API error: ${response.status}`,\r\n        routes: [] \r\n      }, { status: response.status });\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Return the data\r\n    return NextResponse.json(data);\r\n  } catch (error) {\r\n    console.error('Error fetching routes:', error);\r\n    return NextResponse.json({ \r\n      error: 'Failed to fetch routes',\r\n      routes: [] \r\n    }, { status: 500 });\r\n  }\r\n} "],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,IAAI,OAAgB;IACxC,IAAI;QACF,0CAA0C;QAC1C,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,MAAM,aAAa,GAAG,CAAC,UAAU;QACvC,MAAM,MAAM,aAAa,GAAG,CAAC,UAAU;QAEvC,uBAAuB;QACvB,MAAM,SAAS;QAEf,mCAAmC;QACnC,MAAM,WAAW,MAAM,MACrB,CAAC,4CAA4C,EAAE,IAAI,KAAK,EAAE,IAAI,qBAAqB,EAAE,QAAQ,EAC7F;YACE,SAAS;gBACP,UAAU;YACZ;YACA,MAAM;gBAAE,YAAY;YAAG;QACzB;QAGF,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,QAAQ,KAAK,CAAC,CAAC,wBAAwB,EAAE,SAAS,MAAM,EAAE;YAC1D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,OAAO,CAAC,wBAAwB,EAAE,SAAS,MAAM,EAAE;gBACnD,QAAQ,EAAE;YACZ,GAAG;gBAAE,QAAQ,SAAS,MAAM;YAAC;QAC/B;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,kBAAkB;QAClB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,OAAO;YACP,QAAQ,EAAE;QACZ,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}