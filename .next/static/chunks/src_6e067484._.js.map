{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Abel/Documents/Code/Undergraduate%20Final%20Project/reroute/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  throw new Error(\"Missing Supabase environment variables\");\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\nexport async function getStopsByRoute(routeId: string) {\r\n  if (!routeId) {\r\n    console.error(\"Route ID is required.\");\r\n    return [];\r\n  }\r\n\r\n  let { data, error } = await supabase\r\n    .rpc('get', { \r\n      route_num: '123', \r\n      direction_num: 0 \r\n    });\r\n\r\n  if (error) {\r\n    console.error('Error fetching stops:', error.message, error.details, error.code);\r\n    return [];\r\n  }\r\n\r\n  if (!data) return [];\r\n\r\n  return data.map((record: {\r\n    stop_id: string;\r\n    route_stop_order: number;\r\n    stop_name: string;\r\n    stop_lat: number;\r\n    stop_lon: number;\r\n  }) => ({\r\n    stop_id: record.stop_id,\r\n    route_stop_order: record.route_stop_order,\r\n    stop_name: record.stop_name,\r\n    stop_lat: record.stop_lat,\r\n    stop_lon: record.stop_lon\r\n  }));\r\n}\r\n"],"names":[],"mappings":";;;;AAEoB;AAFpB;;AAEA,MAAM;AACN,MAAM;AAEN,uCAAsC;;AAEtC;AAEO,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAC3C,eAAe,gBAAgB,OAAe;IACnD,IAAI,CAAC,SAAS;QACZ,QAAQ,KAAK,CAAC;QACd,OAAO,EAAE;IACX;IAEA,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SACzB,GAAG,CAAC,OAAO;QACV,WAAW;QACX,eAAe;IACjB;IAEF,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,yBAAyB,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,IAAI;QAC/E,OAAO,EAAE;IACX;IAEA,IAAI,CAAC,MAAM,OAAO,EAAE;IAEpB,OAAO,KAAK,GAAG,CAAC,CAAC,SAMX,CAAC;YACL,SAAS,OAAO,OAAO;YACvB,kBAAkB,OAAO,gBAAgB;YACzC,WAAW,OAAO,SAAS;YAC3B,UAAU,OAAO,QAAQ;YACzB,UAAU,OAAO,QAAQ;QAC3B,CAAC;AACH","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Abel/Documents/Code/Undergraduate%20Final%20Project/reroute/src/app/map/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useJsApiLoader, GoogleMap, Marker } from \"@react-google-maps/api\";\nimport { useRouter } from \"next/navigation\";\nimport { supabase } from '@/lib/supabase';\n\nconst Page = () => {\n    const router = useRouter();\n    const [userPosition, setUserPosition] = useState<{ lat: number; lng: number } | null>(null);\n    const defaultPosition = { lat: 33.878840, lng: -117.884973 }; // Default map center\n    const [busStops, setBusStops] = useState<{ stop_id: string; stop_name: string; lat: number; lng: number }[]>([]);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [routes, setRoutes] = useState<{ route_id: string; route_name: string; route_url: string }[]>([]);\n    const [locationError, setLocationError] = useState<string | null>(null);\n    const mapRef = useRef<google.maps.Map | null>(null);\n    const markerRef = useRef<any>(null);\n    const [mapCenter, setMapCenter] = useState(defaultPosition);\n\n    const { isLoaded } = useJsApiLoader({\n        googleMapsApiKey: process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY!,\n        libraries: [\"places\", \"maps\"], \n    });\n\n    // Separate function to handle location updates\n    const handleLocationUpdate = (position: GeolocationPosition) => {\n        const newPosition = {\n            lat: Number(position.coords.latitude.toFixed(9)),\n            lng: Number(position.coords.longitude.toFixed(9)),\n        };\n        setUserPosition(newPosition);\n        setMapCenter(newPosition);\n        fetchRoutes(newPosition.lat, newPosition.lng, setRoutes);\n        setLocationError(null);\n    };\n\n    // Function to handle map center changes\n    const handleMapCenterChanged = () => {\n        if (mapRef.current) {\n            const center = mapRef.current.getCenter();\n            if (center) {\n                const newCenter = {\n                    lat: Number(center.lat().toFixed(9)),\n                    lng: Number(center.lng().toFixed(9))\n                };\n                setMapCenter(newCenter);\n                fetchRoutes(newCenter.lat, newCenter.lng, setRoutes);\n            }\n        }\n    };\n\n    // Function to update the advanced marker\n    const updateUserMarker = () => {\n        if (!mapRef.current || !userPosition || !window.google || !window.google.maps || !window.google.maps.marker) {\n            console.log(\"Cannot create marker - missing dependencies:\", {\n                map: !!mapRef.current,\n                userPosition: !!userPosition,\n                google: !!window.google,\n                maps: !!(window.google && window.google.maps),\n                marker: !!(window.google && window.google.maps && window.google.maps.marker)\n            });\n            return;\n        }\n        \n        try {\n            // Remove existing marker if it exists\n            if (markerRef.current) {\n                markerRef.current.map = null;\n            }\n            \n            // Create a new advanced marker\n            const markerView = new window.google.maps.marker.AdvancedMarkerElement({\n                map: mapRef.current,\n                position: userPosition,\n                title: \"Your Location\",\n                content: createMarkerContent(),\n            });\n            \n            markerRef.current = markerView;\n            console.log(\"Advanced marker created successfully\");\n        } catch (error) {\n            console.error(\"Error creating advanced marker:\", error);\n        }\n    };\n\n    // Function to create custom marker content\n    const createMarkerContent = () => {\n        const div = document.createElement('div');\n        div.className = 'custom-marker';\n        div.innerHTML = `\n            <div style=\"\n                background-color: #4285F4;\n                border-radius: 50%;\n                width: 20px;\n                height: 20px;\n                border: 2px solid white;\n                box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                color: white;\n                font-weight: bold;\n                font-size: 12px;\n            \">\n                You\n            </div>\n        `;\n        return div;\n    };\n\n    // Update marker when user position changes\n    useEffect(() => {\n        if (isLoaded && userPosition) {\n            // Add a small delay to ensure the marker library is fully loaded\n            const timer = setTimeout(() => {\n                updateUserMarker();\n            }, 500);\n            \n            return () => clearTimeout(timer);\n        }\n    }, [isLoaded, userPosition]);\n\n    // Fetch routes when map center changes\n    useEffect(() => {\n        if (isLoaded && mapCenter) {\n            fetchRoutes(mapCenter.lat, mapCenter.lng, setRoutes);\n        }\n    }, [isLoaded, mapCenter]);\n\n    useEffect(() => {\n        // Immediately fetch routes with default position\n        fetchRoutes(defaultPosition.lat, defaultPosition.lng, setRoutes);\n\n        const fetchStopsData = async () => {\n            try {\n                const response = await fetch(\"/stops.csv\");\n                const stopsData = await response.text();\n\n                const stops: { stop_id: string; stop_name: string; lat: number; lng: number }[] = [];\n                const rows = stopsData.split(\"\\n\");\n\n                rows.slice(1).forEach((row) => {\n                    const columns = row.split(\",\");\n                    if (columns.length === 4) {\n                        const stop_id = columns[0].trim();\n                        const stop_name = columns[1].trim();\n                        const lat = parseFloat(columns[2].trim());\n                        const lng = parseFloat(columns[3].trim());\n                        if (!isNaN(lat) && !isNaN(lng)) {\n                            stops.push({ stop_id, stop_name, lat, lng });\n                        }\n                    }\n                });\n\n                setBusStops(stops);\n            } catch (error) {\n                console.error(\"Error fetching stop data:\", error);\n            }\n        };\n\n        fetchStopsData();\n\n        // Get initial position\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                handleLocationUpdate,\n                (error) => {\n                    setLocationError(`Error getting location: ${error.message}`);\n                    console.error(\"Error getting initial location:\", error);\n                },\n                {\n                    enableHighAccuracy: true,\n                    maximumAge: 30000,\n                    timeout: 27000,\n                }\n            );\n\n            // Set up continuous watching with more relaxed parameters\n            const watchId = navigator.geolocation.watchPosition(\n                handleLocationUpdate,\n                (error) => {\n                    setLocationError(`Error tracking location: ${error.message}`);\n                    console.error(\"Error watching location:\", error);\n                },\n                {\n                    enableHighAccuracy: true,\n                    maximumAge: 60000, // Accept positions up to 1 minute old\n                    timeout: 30000, // Wait up to 30 seconds for a position\n                }\n            );\n\n            return () => {\n                navigator.geolocation.clearWatch(watchId);\n                // Clean up marker when component unmounts\n                if (markerRef.current) {\n                    markerRef.current.map = null;\n                }\n            };\n        } else {\n            setLocationError(\"Geolocation is not supported by your browser\");\n        }\n    }, []);\n\n    const fetchRoutes = async (lat: number, lng: number, setRoutes: (routes: any[]) => void) => {\n        try {\n            // Format coordinates to 9 decimal places\n            const formattedLat = Number(lat.toFixed(9));\n            const formattedLng = Number(lng.toFixed(9));\n\n            // Log the request for debugging\n            console.log(`Fetching routes for lat: ${formattedLat}, lon: ${formattedLng}`);\n            \n            // Find stops near the user's location\n            const { data: nearbyStops, error } = await supabase\n                .from('stops')\n                .select('stop_id, stop_name, stop_lat, stop_lon')\n                .filter('stop_lat', 'gte', formattedLat - 0.01)\n                .filter('stop_lat', 'lte', formattedLat + 0.01)\n                .filter('stop_lon', 'gte', formattedLng - 0.01)\n                .filter('stop_lon', 'lte', formattedLng + 0.01);\n            \n            if (error) {\n                console.error(\"Error fetching nearby stops:\", error);\n                setRoutes([]);\n                return;\n            }\n            \n            if (!nearbyStops || nearbyStops.length === 0) {\n                console.log(\"No nearby stops found\");\n                setRoutes([]);\n                return;\n            }\n            \n            console.log(`Found ${nearbyStops.length} nearby stops`);\n            \n            // Get unique route IDs from stop_times for these stops\n            const stopIds = nearbyStops.map(stop => stop.stop_id);\n            \n            const { data: stopTimes, error: stopTimesError } = await supabase\n                .from('stop_times')\n                .select('trip_id, stop_id')\n                .in('stop_id', stopIds)\n                .limit(100);\n            \n            if (stopTimesError) {\n                console.error(\"Error fetching stop times:\", stopTimesError);\n                setRoutes([]);\n                return;\n            }\n            \n            if (!stopTimes || stopTimes.length === 0) {\n                console.log(\"No stop times found for nearby stops\");\n                setRoutes([]);\n                return;\n            }\n            \n            // Get unique trip IDs\n            const tripIds = [...new Set(stopTimes.map(st => st.trip_id))];\n            \n            // Get routes from trips\n            const { data: trips, error: tripsError } = await supabase\n                .from('trips')\n                .select('route_id, trip_id')\n                .in('trip_id', tripIds)\n                .limit(100);\n            \n            if (tripsError) {\n                console.error(\"Error fetching trips:\", tripsError);\n                setRoutes([]);\n                return;\n            }\n            \n            if (!trips || trips.length === 0) {\n                console.log(\"No trips found for stop times\");\n                setRoutes([]);\n                return;\n            }\n            \n            // Get unique route IDs\n            const routeIds = [...new Set(trips.map(trip => trip.route_id))];\n            \n            // Get route details\n            const { data: routes, error: routesError } = await supabase\n                .from('routes')\n                .select('route_id, route_short_name, route_long_name')\n                .in('route_id', routeIds)\n                .limit(20);\n            \n            if (routesError) {\n                console.error(\"Error fetching routes:\", routesError);\n                setRoutes([]);\n                return;\n            }\n            \n            if (!routes || routes.length === 0) {\n                console.log(\"No routes found for trips\");\n                setRoutes([]);\n                return;\n            }\n            \n            // Format routes for display\n            const formattedRoutes = routes.map(route => ({\n                route_id: route.route_id,\n                route_name: route.route_short_name || route.route_long_name || `Route ${route.route_id}`,\n                route_url: '#'\n            }));\n            \n            console.log(`Found ${formattedRoutes.length} nearby routes:`, formattedRoutes);\n            setRoutes(formattedRoutes);\n        } catch (error) {\n            console.error(\"Error fetching routes:\", error);\n            setRoutes([]);\n        }\n    };\n\n    // Function to handle route click\n    const handleRouteClick = (routeId: string) => {\n        router.push(`/route/${routeId}`);\n    };\n\n    if (!isLoaded) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div style={{ height: \"100vh\", width: \"100%\", background: \"linear-gradient(to bottom right, #1e3c72, #2a5298)\", color: \"#fff\", display: \"flex\", flexDirection: \"column\" }}>\n  {/* Top Header */}\n  <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", padding: \"20px\" }}>\n    <h1 style={{ fontSize: \"48px\", fontWeight: \"bold\" }}>REROUTE</h1>\n    <button style={{ fontSize: \"18px\", background: \"none\", border: \"none\", color: \"#fff\", cursor: \"pointer\" }}>FAQ</button>\n  </div>\n\n  {/* Main Content */}\n  <div style={{ display: \"flex\", flex: 1, padding: \"20px\" }}>\n    {/* Left Side: Search and Map */}\n    <div style={{ flex: 1, marginRight: \"20px\", display: \"flex\", flexDirection: \"column\" }}>\n      {/* Search Bar */}\n      <input \n        type=\"text\" \n        placeholder=\"Location Search\" \n        value={searchQuery} \n        onChange={(e) => setSearchQuery(e.target.value)} \n        style={{\n          padding: \"12px\",\n          borderRadius: \"8px\",\n          border: \"none\",\n          fontSize: \"16px\",\n          marginBottom: \"20px\",\n          backgroundColor: \"#eee\",\n          color: \"#333\"\n        }} \n      />\n\n      {/* Map */}\n      <div style={{ flex: 1, borderRadius: \"15px\", overflow: \"hidden\" }}>\n        <GoogleMap\n          zoom={14}\n          center={userPosition || defaultPosition}\n          mapContainerStyle={{ height: \"100%\", width: \"100%\" }}\n          options={{\n            fullscreenControl: false,\n            streetViewControl: false,\n            mapTypeControl: false,\n            zoomControl: true,\n            gestureHandling: \"greedy\",\n            styles: [\n              {\n                \"elementType\": \"geometry\",\n                \"stylers\": [{ \"color\": \"#242f3e\" }]\n              },\n              {\n                \"elementType\": \"labels.text.stroke\",\n                \"stylers\": [{ \"lightness\": -80 }]\n              },\n              {\n                \"featureType\": \"administrative.locality\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{ \"color\": \"#746855\" }]\n              },\n              {\n                \"featureType\": \"poi\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{ \"color\": \"#d59563\" }]\n              },\n              {\n                \"featureType\": \"poi.park\",\n                \"elementType\": \"geometry\",\n                \"stylers\": [{ \"color\": \"#263c3f\" }]\n              },\n              {\n                \"featureType\": \"poi.park\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{ \"color\": \"#6b9a76\" }]\n              },\n              {\n                \"featureType\": \"road\",\n                \"elementType\": \"geometry\",\n                \"stylers\": [{ \"color\": \"#38414e\" }]\n              },\n              {\n                \"featureType\": \"road\",\n                \"elementType\": \"geometry.stroke\",\n                \"stylers\": [{ \"color\": \"#212a37\" }]\n              },\n              {\n                \"featureType\": \"road\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{ \"color\": \"#9ca5b3\" }]\n              },\n              {\n                \"featureType\": \"road.highway\",\n                \"elementType\": \"geometry\",\n                \"stylers\": [{ \"color\": \"#746855\" }]\n              },\n              {\n                \"featureType\": \"road.highway\",\n                \"elementType\": \"geometry.stroke\",\n                \"stylers\": [{ \"color\": \"#1f2835\" }]\n              },\n              {\n                \"featureType\": \"road.highway\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{ \"color\": \"#f3d19c\" }]\n              },\n              {\n                \"featureType\": \"transit\",\n                \"elementType\": \"geometry\",\n                \"stylers\": [{ \"color\": \"#2f3948\" }]\n              },\n              {\n                \"featureType\": \"transit.station\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{ \"color\": \"#d59563\" }]\n              },\n              {\n                \"featureType\": \"water\",\n                \"elementType\": \"geometry\",\n                \"stylers\": [{ \"color\": \"#17263c\" }]\n              },\n              {\n                \"featureType\": \"water\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{ \"color\": \"#515c6d\" }]\n              },\n              {\n                \"featureType\": \"water\",\n                \"elementType\": \"labels.text.stroke\",\n                \"stylers\": [{ \"lightness\": -20 }]\n              }\n            ],\n          }}\n          onLoad={(map) => {\n            mapRef.current = map;\n            if (userPosition) {\n              // Add a small delay to ensure the marker library is fully loaded\n              setTimeout(() => {\n                updateUserMarker();\n              }, 500);\n            }\n          }}\n          onDragEnd={handleMapCenterChanged}\n          onZoomChanged={handleMapCenterChanged}\n        >\n          {/* Advanced markers are now managed via the updateUserMarker function */}\n        </GoogleMap>\n      </div>\n    </div>\n\n    {/* Right Side: Routes List */}\n    <div style={{ flex: 1, background: \"#1e3c72\", borderRadius: \"15px\", padding: \"20px\", display: \"flex\", flexDirection: \"column\" }}>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: \"20px\" }}>\n        <h2 style={{ fontSize: \"24px\" }}>COMMON TRANSIT ({routes.length} routes)</h2>\n        <button \n          onClick={() => router.push('/routes')}\n          style={{ \n            background: \"rgba(255, 255, 255, 0.1)\", \n            border: \"none\", \n            color: \"#fff\", \n            padding: \"8px 12px\", \n            borderRadius: \"6px\", \n            cursor: \"pointer\",\n            fontSize: \"14px\",\n            transition: \"background 0.2s\"\n          }}\n          onMouseOver={(e) => {\n            e.currentTarget.style.background = \"rgba(255, 255, 255, 0.2)\";\n          }}\n          onMouseOut={(e) => {\n            e.currentTarget.style.background = \"rgba(255, 255, 255, 0.1)\";\n          }}\n        >\n          View All Routes\n        </button>\n      </div>\n      <div style={{ flex: 1, overflowY: \"auto\" }}>\n        {routes.length === 0 ? (\n          <p>No nearby routes found. {locationError ? `Error: ${locationError}` : ''}</p>\n        ) : (\n          routes.map((route) => (\n            <div \n              key={route.route_id} \n              style={{ \n                background: \"linear-gradient(to right, #1e3c72, #2a5298)\", \n                padding: \"15px\", \n                borderRadius: \"10px\", \n                marginBottom: \"10px\", \n                display: \"flex\", \n                alignItems: \"center\", \n                justifyContent: \"space-between\",\n                cursor: \"pointer\",\n                transition: \"transform 0.2s, box-shadow 0.2s\",\n                boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\"\n              }}\n              onClick={() => handleRouteClick(route.route_id)}\n              onMouseOver={(e) => {\n                e.currentTarget.style.transform = \"translateY(-2px)\";\n                e.currentTarget.style.boxShadow = \"0 4px 8px rgba(0,0,0,0.2)\";\n              }}\n              onMouseOut={(e) => {\n                e.currentTarget.style.transform = \"translateY(0)\";\n                e.currentTarget.style.boxShadow = \"0 2px 4px rgba(0,0,0,0.1)\";\n              }}\n            >\n              <div>\n                <div style={{ fontSize: \"18px\", fontWeight: \"bold\" }}>OCTA BUS {route.route_id}</div>\n                <div style={{ fontSize: \"14px\", marginTop: \"5px\" }}>{route.route_name}</div>\n                <div style={{ fontSize: \"12px\", marginTop: \"5px\" }}>10 Minutes Arrival Prediction: 13 Minutes</div>\n              </div>\n              <div style={{ fontSize: \"24px\" }}>➔</div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  </div>\n</div>\n    );\n};\n\nexport default Page;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 842, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}