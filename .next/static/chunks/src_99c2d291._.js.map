{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Abel/Documents/Code/Undergraduate%20Final%20Project/reroute/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  throw new Error(\"Missing Supabase environment variables\");\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\nexport async function getStopsByRoute(routeId: string) {\r\n  if (!routeId) {\r\n    console.error(\"Route ID is required.\");\r\n    return [];\r\n  }\r\n\r\n  let { data, error } = await supabase\r\n    .rpc('get', { \r\n      route_num: '123', \r\n      direction_num: 0 \r\n    });\r\n\r\n  if (error) {\r\n    console.error('Error fetching stops:', error.message, error.details, error.code);\r\n    return [];\r\n  }\r\n\r\n  if (!data) return [];\r\n\r\n  return data.map((record: {\r\n    stop_id: string;\r\n    route_stop_order: number;\r\n    stop_name: string;\r\n    stop_lat: number;\r\n    stop_lon: number;\r\n  }) => ({\r\n    stop_id: record.stop_id,\r\n    route_stop_order: record.route_stop_order,\r\n    stop_name: record.stop_name,\r\n    stop_lat: record.stop_lat,\r\n    stop_lon: record.stop_lon\r\n  }));\r\n}\r\n"],"names":[],"mappings":";;;;AAEoB;AAFpB;;AAEA,MAAM;AACN,MAAM;AAEN,uCAAsC;;AAEtC;AAEO,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAC3C,eAAe,gBAAgB,OAAe;IACnD,IAAI,CAAC,SAAS;QACZ,QAAQ,KAAK,CAAC;QACd,OAAO,EAAE;IACX;IAEA,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SACzB,GAAG,CAAC,OAAO;QACV,WAAW;QACX,eAAe;IACjB;IAEF,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,yBAAyB,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,IAAI;QAC/E,OAAO,EAAE;IACX;IAEA,IAAI,CAAC,MAAM,OAAO,EAAE;IAEpB,OAAO,KAAK,GAAG,CAAC,CAAC,SAMX,CAAC;YACL,SAAS,OAAO,OAAO;YACvB,kBAAkB,OAAO,gBAAgB;YACzC,WAAW,OAAO,SAAS;YAC3B,UAAU,OAAO,QAAQ;YACzB,UAAU,OAAO,QAAQ;QAC3B,CAAC;AACH","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Abel/Documents/Code/Undergraduate%20Final%20Project/reroute/src/app/components/stoplist.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { getStopsByRoute } from '@/lib/supabase';\r\n\r\nconst StopsList = ({ routeId }: { routeId: string }) => {\r\n  const [stops, setStops] = useState<Array<{\r\n    stop_id: string;\r\n    stop_name: string;\r\n    stop_lat: number;\r\n    stop_lon: number;\r\n    route_stop_order: number; // Added route_stop_order here\r\n  }>>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchStops = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await getStopsByRoute(routeId);\r\n        setStops(data);\r\n      } catch (err) {\r\n        setError('Error fetching stops');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchStops();\r\n  }, [routeId]);\r\n\r\n  if (loading) return <p>Loading stops...</p>;\r\n  if (error) return <p>{error}</p>;\r\n  if (!stops.length) return <p>No stops found for this route.</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Stops for Route {routeId}</h2>\r\n      <ul>\r\n        {stops.map((stop) => (\r\n          <li key={stop.stop_id}>\r\n            {stop.stop_name} (Order: {stop.route_stop_order}) - ({stop.stop_lat}, {stop.stop_lon})\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StopsList;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKA,MAAM,YAAY,CAAC,EAAE,OAAO,EAAuB;;IACjD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAM7B,EAAE;IACN,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM;kDAAa;oBACjB,IAAI;wBACF,WAAW;wBACX,MAAM,OAAO,MAAM,CAAA,GAAA,yHAAA,CAAA,kBAAe,AAAD,EAAE;wBACnC,SAAS;oBACX,EAAE,OAAO,KAAK;wBACZ,SAAS;oBACX,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;QACF;8BAAG;QAAC;KAAQ;IAEZ,IAAI,SAAS,qBAAO,6LAAC;kBAAE;;;;;;IACvB,IAAI,OAAO,qBAAO,6LAAC;kBAAG;;;;;;IACtB,IAAI,CAAC,MAAM,MAAM,EAAE,qBAAO,6LAAC;kBAAE;;;;;;IAE7B,qBACE,6LAAC;;0BACC,6LAAC;;oBAAG;oBAAiB;;;;;;;0BACrB,6LAAC;0BACE,MAAM,GAAG,CAAC,CAAC,qBACV,6LAAC;;4BACE,KAAK,SAAS;4BAAC;4BAAU,KAAK,gBAAgB;4BAAC;4BAAM,KAAK,QAAQ;4BAAC;4BAAG,KAAK,QAAQ;4BAAC;;uBAD9E,KAAK,OAAO;;;;;;;;;;;;;;;;AAO/B;GA3CM;KAAA;uCA6CS","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Abel/Documents/Code/Undergraduate%20Final%20Project/reroute/src/app/route/%5Brouteid%5D/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useParams } from 'next/navigation';\r\nimport StopsList from '@/app/components/stoplist';\r\n\r\nconst RoutePage = () => {\r\n    const params = useParams();\r\n    const routeId = params?.routeid as string;\r\n\r\n    if (!routeId) return <p>Loading...</p>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Route {routeId}</h1>\r\n            <StopsList routeId={'routeId'} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoutePage;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKA,MAAM,YAAY;;IACd,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,UAAU,QAAQ;IAExB,IAAI,CAAC,SAAS,qBAAO,6LAAC;kBAAE;;;;;;IAExB,qBACI,6LAAC;;0BACG,6LAAC;;oBAAG;oBAAO;;;;;;;0BACX,6LAAC,wIAAA,CAAA,UAAS;gBAAC,SAAS;;;;;;;;;;;;AAGhC;GAZM;;QACa,qIAAA,CAAA,YAAS;;;KADtB;uCAcS","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}