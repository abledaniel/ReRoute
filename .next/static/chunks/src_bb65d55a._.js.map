{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Abel/Documents/Code/Undergraduate%20Final%20Project/reroute/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.SUPABASE_URL!;\r\nconst supabaseAnonKey = process.env.SUPABASE_ANON_KEY!;\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n\r\n// For server-side operations with higher privileges\r\nexport const supabaseAdmin = createClient(\r\n  process.env.SUPABASE_URL!,\r\n  process.env.SUPABASE_ANON_KEY!\r\n);\r\n\r\nexport async function getStopsByRoute(routeId: string) {\r\n  const { data, error } = await supabase\r\n      .from('stops')\r\n      .select('stop_id, stop_name, stop_lat, stop_lon')\r\n      .eq('route_id', routeId);\r\n\r\n  if (error) {\r\n      console.error('Error fetching stops:', error);\r\n      return [];\r\n  }\r\n  return data;\r\n}\r\n"],"names":[],"mappings":";;;;;AAEoB;AAFpB;;AAEA,MAAM,cAAc,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,YAAY;AAC5C,MAAM,kBAAkB,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,iBAAiB;AAE9C,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAG3C,MAAM,gBAAgB,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EACtC,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,YAAY,EACxB,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,iBAAiB;AAGxB,eAAe,gBAAgB,OAAe;IACnD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SACzB,IAAI,CAAC,SACL,MAAM,CAAC,0CACP,EAAE,CAAC,YAAY;IAEpB,IAAI,OAAO;QACP,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,EAAE;IACb;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Abel/Documents/Code/Undergraduate%20Final%20Project/reroute/src/app/components/stoplist.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { getStopsByRoute } from '@/lib/supabase';\r\n\r\nconst StopsList = ({ routeId }: { routeId: string }) => {\r\n    const [stops, setStops] = useState<any[]>([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchStops() {\r\n            if (!routeId) return;\r\n            const stopsData = await getStopsByRoute(routeId);\r\n            setStops(stopsData);\r\n        }\r\n        fetchStops();\r\n    }, [routeId]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Stops for Route {routeId}</h2>\r\n            <ul>\r\n                {stops.map((stop) => (\r\n                    <li key={stop.stop_id}>\r\n                        {stop.stop_name} ({stop.stop_lat}, {stop.stop_lon})\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StopsList;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKA,MAAM,YAAY,CAAC,EAAE,OAAO,EAAuB;;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAE5C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACN,eAAe;gBACX,IAAI,CAAC,SAAS;gBACd,MAAM,YAAY,MAAM,CAAA,GAAA,yHAAA,CAAA,kBAAe,AAAD,EAAE;gBACxC,SAAS;YACb;YACA;QACJ;8BAAG;QAAC;KAAQ;IAEZ,qBACI,6LAAC;;0BACG,6LAAC;;oBAAG;oBAAiB;;;;;;;0BACrB,6LAAC;0BACI,MAAM,GAAG,CAAC,CAAC,qBACR,6LAAC;;4BACI,KAAK,SAAS;4BAAC;4BAAG,KAAK,QAAQ;4BAAC;4BAAG,KAAK,QAAQ;4BAAC;;uBAD7C,KAAK,OAAO;;;;;;;;;;;;;;;;AAOzC;GAxBM;KAAA;uCA0BS","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}